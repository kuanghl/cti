CMAKE_MINIMUM_REQUIRED(VERSION 2.8...3.20)
PROJECT(gear-lib)

#set output directory
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/build/lib)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/build/bin)
SET(TD_TESTS_OUTPUT_DIR ${PROJECT_BINARY_DIR}/test)

MESSAGE(STATUS "============= Compile Env ============= ")
MESSAGE(STATUS "  CPU Info:    " ${CMAKE_SYSTEM_PROCESSOR})
MESSAGE(STATUS "   Host OS:    " ${CMAKE_HOST_SYSTEM_NAME}-${CMAKE_SYSTEM_VERSION})
MESSAGE(STATUS " CMake VER:    " ${CMAKE_MAJOR_VERSION}-${CMAKE_MINOR_VERSION}-${CMAKE_PATCH_VERSION})
MESSAGE(STATUS "C COMPILER:    " ${CMAKE_C_COMPILER_ID}-${CMAKE_C_COMPILER_VERSION})

IF ("${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
  SET(OS_LINUX TRUE)
  MESSAGE(STATUS " Target OS:    LINUX")
ELSEIF ("${CMAKE_SYSTEM_NAME}" MATCHES "Windows")
  SET(OS_WINDOWS TRUE)
  MESSAGE(STATUS " Target OS:    WINDOWS")
ELSEIF (("${CMAKE_SYSTEM_NAME}" MATCHES "MINGW32") OR  ("${CMAKE_SYSTEM_NAME}" MATCHES "MINGW64"))
  SET(OS_WINDOWS TRUE)
  SET(ENV_MINGW TRUE)
  MESSAGE(STATUS " Target OS:    WINDOWS with MINGW32/64")
  MESSAGE(STATUS "     NOTES:    ENV_MINGW will be the major macro to check")
ELSE ()
  MESSAGE(STATUS " Target OS:    unknown ${CMAKE_SYSTEM_NAME}")
  EXIT ()
ENDIF ()
MESSAGE(STATUS "======================================= ")

MESSAGE(STATUS "============= Project Info ============= ")
MESSAGE(STATUS "       src path: " ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS "bin output path: " ${PROJECT_BINARY_DIR})
MESSAGE(STATUS "exe output path: " ${EXECUTABLE_OUTPUT_PATH})
MESSAGE(STATUS "lib output path: " ${LIBRARY_OUTPUT_PATH})
MESSAGE(STATUS "======================================== ")
